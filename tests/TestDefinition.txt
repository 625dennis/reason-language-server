=== Kitchen sink
--- Lib.re
type <t7>record = {
  <t6>name: string,
  <t8><t5>age: int
};
type variant = <t10>A(int, float) | <t9>B(record);
type container = {v: variant, <t4>r: <c7>record};
let here = {<c6>name: "fred", age: 3};
let a = <c10>A(3, 4.);
--- Other.re
<t11>let thing = {Lib.name: "hi", age: 2};
let <t3>contain = {Lib.v: Lib.<c9>B({name: "inner", age: 1}), r: {name: "one", <c8>age: 5}};
---
let <t1>awesome_awesome = 10;
let <t2>m = <c1>awesome_awesome;
let z = string_of_int(<c2>m);
O<c11>ther.<c3>contain.<c4>r.<c5>age;
let m = A(2,3);
-->
1: PASS
2: PASS
3: PASS
4: PASS
5: PASS
6: PASS
7: PASS
8: PASS
9: PASS
10: PASS
11: PASS

=== Single
let x = (~<t1>a, ~<t2>b: int) => <c1>a + <c2>b
-->
1: PASS
2: PASS
