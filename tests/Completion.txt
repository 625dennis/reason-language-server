### Toplevel Values

=== Basic
let awesome = 10;
let x = awe<*>
-->
awesome
- uri: /path/to/Test.re
> let awesome: int

=== In Module
module M = {
  let awesome = 10;
};
let x = M.awe<*>
-->
awesome
- uri: /path/to/Test.re
> let awesome: int

=== Above module
let x = M.awe<*>
module M = {
  let awesome = 10;
};
-->


### Attributes

=== Basic
type t = {name: int, nose: float};
let m = {name: 2, nose: 1.4};
m.n<*>
-->
name
- uri: /path/to/Test.re
> name: int
> 
> type name = {name: int, nose: float}
nose
- uri: /path/to/Test.re
> nose: float
> 
> type nose = {name: int, nose: float}

### MultiFile

=== 1
--- Lib.re
let awesome = "hello";
let awkward = 4.1;
---
Lib.<*>
-->
awkward
- uri: /path/to/Lib.re
> let awkward: float
awesome
- uri: /path/to/Lib.re
> let awesome: string

=== 2
--- Lib.re
let awesome = "hello";
let awkward = 4.1;
---
Lib.aw<*>
-->
awkward
- uri: /path/to/Lib.re
> let awkward: float
awesome
- uri: /path/to/Lib.re
> let awesome: string
